{"version":3,"file":"static/js/750.31150efd.chunk.js","mappings":"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","sources":["content/applications/Messenger/TopBarContent.js","content/applications/Messenger/BottomBarContent.js","content/applications/Messenger/ChatContent.js","components/Scrollbar/index.js","content/applications/Messenger/index.js"],"sourcesContent":["import { useState } from 'react';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Avatar,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Drawer,\n  Divider,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  styled,\n  useTheme\n} from '@mui/material';\nimport { formatDistance, subMinutes } from 'date-fns';\nimport CallTwoToneIcon from '@mui/icons-material/CallTwoTone';\nimport VideoCameraFrontTwoToneIcon from '@mui/icons-material/VideoCameraFrontTwoTone';\nimport InfoTwoToneIcon from '@mui/icons-material/InfoTwoTone';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone';\nimport ColorLensTwoToneIcon from '@mui/icons-material/ColorLensTwoTone';\nimport NotificationsOffTwoToneIcon from '@mui/icons-material/NotificationsOffTwoTone';\nimport EmojiEmotionsTwoToneIcon from '@mui/icons-material/EmojiEmotionsTwoTone';\nimport CancelTwoToneIcon from '@mui/icons-material/CancelTwoTone';\nimport BlockTwoToneIcon from '@mui/icons-material/BlockTwoTone';\nimport WarningTwoToneIcon from '@mui/icons-material/WarningTwoTone';\nimport DescriptionTwoToneIcon from '@mui/icons-material/DescriptionTwoTone';\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        @media (min-width: ${theme.breakpoints.values.md}px) {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n      }\n`\n);\n\nconst ListItemIconWrapper = styled(ListItemIcon)(\n  ({ theme }) => `\n        min-width: 36px;\n        color: ${theme.colors.primary.light};\n`\n);\n\nconst AccordionSummaryWrapper = styled(AccordionSummary)(\n  ({ theme }) => `\n        &.Mui-expanded {\n          min-height: 48px;\n        }\n\n        .MuiAccordionSummary-content.Mui-expanded {\n          margin: 12px 0;\n        }\n\n        .MuiSvgIcon-root {\n          transition: ${theme.transitions.create(['color'])};\n        }\n\n        &.MuiButtonBase-root {\n\n          margin-bottom: ${theme.spacing(0.5)};\n\n          &:last-child {\n            margin-bottom: 0;\n          }\n\n          &.Mui-expanded,\n          &:hover {\n            background: ${theme.colors.alpha.black[10]};\n\n            .MuiSvgIcon-root {\n              color: ${theme.colors.primary.main};\n            }\n          }\n        }\n`\n);\n\nfunction TopBarContent() {\n  const theme = useTheme();\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const [expanded, setExpanded] = useState('section1');\n\n  const handleChange = (section) => (event, isExpanded) => {\n    setExpanded(isExpanded ? section : false);\n  };\n\n  return (\n    <>\n      <RootWrapper>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Avatar\n            variant=\"rounded\"\n            sx={{\n              width: 48,\n              height: 48\n            }}\n            alt=\"Zain Baptista\"\n            src=\"/static/images/avatars/1.jpg\"\n          />\n          <Box ml={1}>\n            <Typography variant=\"h4\">Zain Baptista</Typography>\n            <Typography variant=\"subtitle1\">\n              {formatDistance(subMinutes(new Date(), 8), new Date(), {\n                addSuffix: true\n              })}\n            </Typography>\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: { xs: 'none', lg: 'flex' }\n          }}\n        >\n          <Tooltip placement=\"bottom\" title=\"Start a voice call\">\n            <IconButton color=\"primary\">\n              <CallTwoToneIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Start a video call\">\n            <IconButton color=\"primary\">\n              <VideoCameraFrontTwoToneIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Conversation information\">\n            <IconButton color=\"primary\" onClick={handleDrawerToggle}>\n              <InfoTwoToneIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </RootWrapper>\n      <Drawer\n        sx={{\n          display: { xs: 'none', md: 'flex' }\n        }}\n        variant=\"temporary\"\n        anchor={theme.direction === 'rtl' ? 'left' : 'right'}\n        open={mobileOpen}\n        onClose={handleDrawerToggle}\n        elevation={9}\n      >\n        <Box\n          sx={{\n            minWidth: 360\n          }}\n          p={2}\n        >\n          <Box\n            sx={{\n              textAlign: 'center'\n            }}\n          >\n            <Avatar\n              sx={{\n                mx: 'auto',\n                my: 2,\n                width: theme.spacing(12),\n                height: theme.spacing(12)\n              }}\n              variant=\"rounded\"\n              alt=\"Zain Baptista\"\n              src=\"/static/images/avatars/1.jpg\"\n            />\n            <Typography variant=\"h4\">Zain Baptista</Typography>\n            <Typography variant=\"subtitle2\">\n              Active{' '}\n              {formatDistance(subMinutes(new Date(), 7), new Date(), {\n                addSuffix: true\n              })}\n            </Typography>\n          </Box>\n          <Divider\n            sx={{\n              my: 3\n            }}\n          />\n\n          <Accordion\n            expanded={expanded === 'section1'}\n            onChange={handleChange('section1')}\n          >\n            <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n              <Typography variant=\"h5\">Customize Chat</Typography>\n            </AccordionSummaryWrapper>\n            <AccordionDetails\n              sx={{\n                p: 0\n              }}\n            >\n              <List component=\"nav\">\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <SearchTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Search in Conversation\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <ColorLensTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Change Theme Styling\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <EmojiEmotionsTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Choose Default Emoji\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                  />\n                </ListItem>\n              </List>\n            </AccordionDetails>\n          </Accordion>\n          <Accordion\n            expanded={expanded === 'section2'}\n            onChange={handleChange('section2')}\n          >\n            <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n              <Typography variant=\"h5\">Privacy & Support</Typography>\n            </AccordionSummaryWrapper>\n            <AccordionDetails\n              sx={{\n                p: 0\n              }}\n            >\n              <List component=\"nav\">\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <NotificationsOffTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Turn off notifications\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <CancelTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Ignore all messages\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <BlockTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Block user\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <WarningTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Something's Wrong\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary=\"Report the conversation and provide feedback\"\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\n                  />\n                </ListItem>\n              </List>\n            </AccordionDetails>\n          </Accordion>\n          <Accordion\n            expanded={expanded === 'section3'}\n            onChange={handleChange('section3')}\n          >\n            <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n              <Typography variant=\"h5\">Shared Files</Typography>\n            </AccordionSummaryWrapper>\n            <AccordionDetails\n              sx={{\n                p: 0\n              }}\n            >\n              <List component=\"nav\">\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <DescriptionTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"HolidayPictures.zip\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary=\"You opened in the past year\"\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <DescriptionTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"2021Screenshot.jpg\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary=\"You edited this file yesterday\"\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <DescriptionTwoToneIcon />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"PresentationDeck.pdf\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary=\"Never opened\"\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\n                  />\n                </ListItem>\n              </List>\n            </AccordionDetails>\n          </Accordion>\n        </Box>\n      </Drawer>\n    </>\n  );\n}\n\nexport default TopBarContent;\n","import {\n  // Avatar,\n  Tooltip,\n  IconButton,\n  Box,\n  Button,\n  styled,\n  InputBase,\n  useTheme\n} from '@mui/material';\nimport { useState } from 'react';\nimport AttachFileTwoToneIcon from '@mui/icons-material/AttachFileTwoTone';\nimport SendTwoToneIcon from '@mui/icons-material/SendTwoTone';\nimport ChatIcon from '@mui/icons-material/Chat';\n\nimport { setMessages, sendMessage } from 'src/actions/chatAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst MessageInputWrapper = styled(InputBase)(\n  ({ theme }) => `\n    font-size: ${theme.typography.pxToRem(18)};\n    padding: ${theme.spacing(1)};\n    width: 100%;\n    max-height: ${theme.typography.pxToRem(\n      162\n    )}; // Approximately 9 lines (18px * 9)\n    // overflow-y: auto;\n    line-height: 1;\n`\n);\n\nconst Input = styled('input')({\n  display: 'none'\n});\n\nfunction BottomBarContent() {\n  const theme = useTheme();\n  // const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const messages = useSelector((state) => state.chat.messages);\n\n  // const user = {\n  //   name: 'Catherine Pike',\n  //   avatar: '/static/images/avatars/1.jpg'\n  // };\n\n  const sendOneMessage = async () => {\n    if (!input.trim()) return;\n\n    const newMessage = { sender: 'user', text: input };\n    // Format messages before sending\n    const formattedMessages = [...messages, newMessage].map((message) => ({\n      role: message.sender === 'bot' ? 'assistant' : 'user',\n      content: message.text\n    }));\n\n    dispatch(setMessages({ message: newMessage }));\n    setInput('');\n    // setLoading(true);\n\n    dispatch(sendMessage({ message: input, formattedMessages }));\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (input.trim()) {\n        // Check if input is not empty\n        sendOneMessage(); // Call your send message function\n        setInput(''); // Clear input after sending\n      }\n    }\n  };\n\n  const [input, setInput] = useState('');\n\n  return (\n    <Box\n      sx={{\n        background: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        px: 2,\n        py: 1\n      }}\n    >\n      <Box flexGrow={1} display=\"flex\" alignItems=\"center\">\n        {/* <Avatar\n          sx={{ display: { xs: 'none', sm: 'flex' }, mr: 1 }}\n          alt={user.name}\n          src={user.avatar}\n        /> */}\n        {/* <ChatIcon sx={{ color: '#265a9e' }} fontSize=\"large\" /> */}\n        <MessageInputWrapper\n          autoFocus\n          placeholder=\"Write a message\"\n          fullWidth\n          multiline\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={handleKeyPress} // Changed from onKeyPress to onKeyDown\n          maxRows={9}\n          sx={{\n            color: '#667085',\n            '& .MuiInputBase-input': {\n              maxHeight: '162px', // Same as wrapper max-height\n              overflowY: 'auto'\n            }\n          }}\n        />\n      </Box>\n      <Box display=\"flex\" alignItems=\"center\">\n        {/* <Tooltip arrow placement=\"top\" title=\"Choose an emoji\">\n          <IconButton\n            sx={{ fontSize: theme.typography.pxToRem(16) }}\n            color=\"primary\"\n          >\n            😀\n          </IconButton>\n        </Tooltip> */}\n        {/* <Input accept=\"image/*\" id=\"messenger-upload-file\" type=\"file\" />\n        <Tooltip arrow placement=\"top\" title=\"Attach a file\">\n          <label htmlFor=\"messenger-upload-file\">\n            <IconButton sx={{ mx: 1, color: 'text.third' }} component=\"span\">\n              <AttachFileTwoToneIcon fontSize=\"small\" />\n            </IconButton>\n          </label>\n        </Tooltip> */}\n        <Button\n          startIcon={<SendTwoToneIcon />}\n          variant=\"contained\"\n          onClick={sendOneMessage}\n          sx={{ color: 'text.third' }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default BottomBarContent;\n","import { Box, Avatar, Typography, Card, styled, Divider } from '@mui/material';\nimport SmsIcon from '@mui/icons-material/Sms';\n// import ChatIcon from '@mui/icons-material/Chat';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport ReactMarkdown from 'react-markdown';\n\n// import {\n//   formatDistance,\n//   format,\n//   subDays,\n//   subHours,\n//   subMinutes\n// } from 'date-fns';\nimport ScheduleTwoToneIcon from '@mui/icons-material/ScheduleTwoTone';\n\n// const DividerWrapper = styled(Divider)(\n//   ({ theme }) => `\n//       .MuiDivider-wrapper {\n//         border-radius: ${theme.general.borderRadiusSm};\n//         text-transform: none;\n//         background: ${theme.palette.background.default};\n//         font-size: ${theme.typography.pxToRem(13)};\n//         color: ${theme.colors.alpha.black[50]};\n//       }\n// `\n// );\n\nconst CardWrapperPrimary = styled(Card)(\n  ({ theme }) => `\n      background: #265A9E;\n      color: white;\n      padding: ${theme.spacing(1)};\n      border-radius: ${theme.general.borderRadiusXl};\n      border-top-right-radius: ${theme.general.borderRadius};\n      max-width: 380px;\n      margin-bottom: 15px;\n      // display: inline-flex;\n\n`\n);\n\nconst CardWrapperSecondary = styled(Card)(\n  ({ theme }) => `\n      background: white;\n      color: #667085;\n      padding: ${theme.spacing(1)};\n      border-radius: ${theme.general.borderRadiusXl};\n      border-top-left-radius: ${theme.general.borderRadius};\n      max-width: 380px;\n      margin-bottom: 15px;\n      // display: inline-flex;\n\n`\n);\n\nfunction ChatContent() {\n  const user = {\n    name: 'Catherine Pike',\n    avatar: '/static/images/avatars/1.jpg'\n  };\n\n  // const [loading, setLoading] = useState(false);\n\n  const messages = useSelector((state) => state.chat.messages);\n  const messagesEndRef = useRef(null); // Ref to the chat container\n\n  // Function to scroll to the bottom of the messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  // Scroll down whenever messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  return (\n    <Box sx={{ overflowY: 'auto' }}>\n      {/* <DividerWrapper>\n        {format(subDays(new Date(), 3), 'MMMM dd yyyy')}\n      </DividerWrapper> */}\n\n      {messages.map((message, index) =>\n        message.sender === 'bot' ? (\n          <Box\n            display=\"flex\"\n            alignItems=\"flex-start\"\n            justifyContent=\"flex-start\"\n            pt={3}\n            key={index}\n          >\n            {/* <Avatar\n          variant=\"rounded\"\n          sx={{\n            width: 50,\n            height: 50\n          }}\n          alt=\"Zain Baptista\"\n          src=\"/static/images/avatars/2.jpg\"\n        /> */}\n            <SmsIcon style={{ color: '#265A9E' }} fontSize=\"large\" />\n            <Box\n              display=\"flex\"\n              alignItems=\"flex-start\"\n              flexDirection=\"column\"\n              justifyContent=\"flex-start\"\n              ml={2}\n            >\n              <Typography\n                variant=\"subtitle1\"\n                color=\"text.third\"\n                sx={{\n                  pt: 1,\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ScheduleTwoToneIcon\n                  sx={{\n                    mr: 0.5,\n                    color: 'text.third'\n                  }}\n                  fontSize=\"small\"\n                />\n                {/* {formatDistance(subHours(new Date(), 115), new Date(), {\n                  addSuffix: true\n                })} */}\n                LiveChat {new Date().getHours()} : {new Date().getMinutes()}\n              </Typography>\n              <CardWrapperSecondary>\n                <ReactMarkdown>{message.text}</ReactMarkdown>\n              </CardWrapperSecondary>\n            </Box>\n          </Box>\n        ) : (\n          <Box\n            display=\"flex\"\n            alignItems=\"flex-start\"\n            justifyContent=\"flex-end\"\n            pt={3}\n            key={index}\n          >\n            <Box\n              display=\"flex\"\n              alignItems=\"flex-end\"\n              flexDirection=\"column\"\n              justifyContent=\"flex-end\"\n              mr={2}\n            >\n              <Typography\n                variant=\"subtitle1\"\n                color=\"text.third\"\n                sx={{\n                  pt: 1,\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ScheduleTwoToneIcon\n                  sx={{\n                    mr: 0.5\n                  }}\n                  fontSize=\"small\"\n                />\n                {/* {formatDistance(subHours(new Date(), 125), new Date(), {\n                  addSuffix: true\n                })} */}\n                LiveChat {new Date().getHours()} : {new Date().getMinutes()}\n              </Typography>\n              <CardWrapperPrimary>\n                <ReactMarkdown>{message.text}</ReactMarkdown>\n              </CardWrapperPrimary>\n            </Box>\n            {/* <Avatar\n              variant=\"rounded\"\n              sx={{\n                width: 50,\n                height: 50\n              }}\n              alt={user.name}\n              src={user.avatar}\n            /> */}\n            <AccountCircleIcon fontSize=\"large\" style={{ color: '#265A9E' }} />\n          </Box>\n        )\n      )}\n      <span ref={messagesEndRef} />\n    </Box>\n  );\n}\n\nexport default ChatContent;\n","import PropTypes from 'prop-types';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\nimport { Box, useTheme } from '@mui/material';\n\nconst Scrollbar = ({ className, children, ...rest }) => {\n  const theme = useTheme();\n\n  return (\n    <Scrollbars\n      autoHide\n      renderView={(props) => (\n        <div\n          {...props}\n          style={{\n            ...props.style,\n            overflowX: 'hidden',\n            marginBottom: 0\n          }}\n        />\n      )}\n      renderThumbVertical={() => {\n        return (\n          <Box\n            sx={{\n              width: 5,\n              background: `${theme.colors.alpha.black[10]}`,\n              borderRadius: `${theme.general.borderRadiusLg}`,\n              transition: `${theme.transitions.create(['background'])}`,\n\n              '&:hover': {\n                background: `${theme.colors.alpha.black[30]}`\n              }\n            }}\n          />\n        );\n      }}\n      {...rest}\n    >\n      {children}\n    </Scrollbars>\n  );\n};\n\nScrollbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default Scrollbar;\n","import { useState } from 'react';\n\nimport { Helmet } from 'react-helmet-async';\n\nimport TopBarContent from './TopBarContent';\nimport BottomBarContent from './BottomBarContent';\nimport SidebarContent from './SidebarContent';\nimport ChatContent from './ChatContent';\nimport MenuTwoToneIcon from '@mui/icons-material/MenuTwoTone';\n\nimport Scrollbar from 'src/components/Scrollbar';\n\nimport {\n  Box,\n  styled,\n  Divider,\n  Drawer,\n  IconButton,\n  useTheme\n} from '@mui/material';\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n       height: calc(100vh - ${theme.header.height});\n       display: flex;\n`\n);\n\nconst Sidebar = styled(Box)(\n  ({ theme }) => `\n        width: 300px;\n        background: ${theme.colors.alpha.black[30]};\n        border-right: ${theme.colors.alpha.black[10]} solid 1px;\n`\n);\n\nconst ChatWindow = styled(Box)(\n  () => `\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n`\n);\n\nconst ChatTopBar = styled(Box)(\n  ({ theme }) => `\n        background: ${theme.colors.alpha.white[100]};\n        border-bottom: ${theme.colors.alpha.black[10]} solid 1px;\n        padding: ${theme.spacing(2)};\n        align-items: center;\n`\n);\n\nconst IconButtonToggle = styled(IconButton)(\n  ({ theme }) => `\n  width: ${theme.spacing(4)};\n  height: ${theme.spacing(4)};\n  background: ${theme.colors.alpha.white[100]};\n`\n);\n\nconst DrawerWrapperMobile = styled(Drawer)(\n  () => `\n    width: 340px;\n    flex-shrink: 0;\n\n  & > .MuiPaper-root {\n        width: 340px;\n        z-index: 3;\n  }\n`\n);\n\nfunction ApplicationsMessenger() {\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>OneDollarAI</title>\n      </Helmet>\n      <RootWrapper className=\"Mui-FixedWrapper\">\n        {/* <DrawerWrapperMobile\n          sx={{\n            display: { lg: 'none', xs: 'inline-block' }\n          }}\n          variant=\"temporary\"\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n        >\n          <Scrollbar>\n            <SidebarContent />\n          </Scrollbar>\n        </DrawerWrapperMobile> */}\n        <Sidebar\n          sx={{\n            display: { xs: 'none', lg: 'inline-block' }\n          }}\n        >\n          <Scrollbar>\n            <SidebarContent />\n          </Scrollbar>\n        </Sidebar>\n        <ChatWindow>\n          <Box flex={1}>\n            <Scrollbar>\n              <ChatContent />\n            </Scrollbar>\n          </Box>\n          <Divider />\n          <BottomBarContent />\n        </ChatWindow>\n      </RootWrapper>\n    </>\n  );\n}\n\nexport default ApplicationsMessenger;\n"],"names":["styled","Box","_ref","theme","breakpoints","values","md","ListItemIcon","_ref2","colors","primary","light","AccordionSummary","_ref3","transitions","create","spacing","alpha","black","main","MessageInputWrapper","InputBase","typography","pxToRem","display","useTheme","dispatch","useDispatch","messages","useSelector","state","chat","sendOneMessage","async","input","trim","newMessage","sender","text","formattedMessages","map","message","role","content","setMessages","setInput","sendMessage","useState","_jsxs","sx","background","alignItems","px","py","children","_jsx","flexGrow","autoFocus","placeholder","fullWidth","multiline","value","onChange","e","target","onKeyDown","key","shiftKey","preventDefault","maxRows","color","maxHeight","overflowY","Button","startIcon","SendTwoToneIcon","variant","onClick","CardWrapperPrimary","Card","general","borderRadiusXl","borderRadius","CardWrapperSecondary","messagesEndRef","useRef","useEffect","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","index","justifyContent","pt","SmsIcon","style","fontSize","flexDirection","ml","Typography","ScheduleTwoToneIcon","mr","Date","getHours","getMinutes","ReactMarkdown","AccountCircleIcon","ref","className","rest","Scrollbars","autoHide","renderView","props","overflowX","marginBottom","renderThumbVertical","width","borderRadiusLg","transition","RootWrapper","header","height","Sidebar","ChatWindow","white","IconButton","_ref4","Drawer","mobileOpen","setMobileOpen","_Fragment","Helmet","xs","lg","Scrollbar","SidebarContent","flex","ChatContent","Divider","BottomBarContent"],"sourceRoot":""}