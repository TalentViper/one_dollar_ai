{"version":3,"file":"static/js/268.534561dc.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/AccountCircle.js","../node_modules/@mui/icons-material/ScheduleTwoTone.js","../node_modules/@mui/icons-material/SendTwoTone.js","../node_modules/@mui/icons-material/Sms.js","../node_modules/@mui/material/Accordion/AccordionContext.js","../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../node_modules/@mui/material/AccordionSummary/AccordionSummary.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../node_modules/add-px-to-style/index.js","../node_modules/dom-css/index.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/performance-now/src/performance-now.coffee","../node_modules/prefix-style/index.js","../node_modules/raf/index.js","../node_modules/react-custom-scrollbars-2/lib/Scrollbars/defaultRenderElements.js","../node_modules/react-custom-scrollbars-2/lib/Scrollbars/index.js","../node_modules/react-custom-scrollbars-2/lib/Scrollbars/styles.js","../node_modules/react-custom-scrollbars-2/lib/index.js","../node_modules/react-custom-scrollbars-2/lib/utils/getInnerHeight.js","../node_modules/react-custom-scrollbars-2/lib/utils/getInnerWidth.js","../node_modules/react-custom-scrollbars-2/lib/utils/getScrollbarWidth.js","../node_modules/react-custom-scrollbars-2/lib/utils/isString.js","../node_modules/react-custom-scrollbars-2/lib/utils/returnFalse.js","../node_modules/style-to-object/src/index.ts","../node_modules/to-camel-case/index.js","../node_modules/to-no-case/index.js","../node_modules/to-space-case/index.js","../node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/esm/index.mjs","../node_modules/unist-util-position/lib/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"\n}), 'AccountCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4.25 12.15L11 13V7h1.5v5.25l4.5 2.67-.75 1.23z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'ScheduleTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 8.25 7.51 1-7.5-3.22zm.01 9.72 7.5-3.22-7.51 1z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 3 2 10l15 2-15 2 .01 7L23 12 2.01 3zM4 8.25V6.03l7.51 3.22-7.51-1zm.01 9.72v-2.22l7.51-1-7.51 3.22z\"\n}, \"1\")], 'SendTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM9 11H7V9h2v2zm4 0h-2V9h2v2zm4 0h-2V9h2v2z\"\n}), 'Sms');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nconst AccordionContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\n\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return _extends({\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    }\n  }, !ownerState.disableGutters && {\n    [`&.${accordionSummaryClasses.expanded}`]: {\n      minHeight: 64\n    }\n  });\n});\nconst AccordionSummaryContent = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0'\n}, !ownerState.disableGutters && {\n  transition: theme.transitions.create(['margin'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    margin: '20px 0'\n  }\n}));\nconst AccordionSummaryExpandIconWrapper = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n}));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    expanded,\n    disabled,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\n\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","/* The following list is defined in React's core */\nvar IS_UNITLESS = {\n  animationIterationCount: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  stopOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nmodule.exports = function(name, value) {\n  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {\n    return value + 'px';\n  } else {\n    return value;\n  }\n};","var prefix = require('prefix-style')\nvar toCamelCase = require('to-camel-case')\nvar cache = { 'float': 'cssFloat' }\nvar addPxToStyle = require('add-px-to-style')\n\nfunction style (element, property, value) {\n  var camel = cache[property]\n  if (typeof camel === 'undefined') {\n    camel = detect(property)\n  }\n\n  // may be false if CSS prop is unsupported\n  if (camel) {\n    if (value === undefined) {\n      return element.style[camel]\n    }\n\n    element.style[camel] = addPxToStyle(camel, value)\n  }\n}\n\nfunction each (element, properties) {\n  for (var k in properties) {\n    if (properties.hasOwnProperty(k)) {\n      style(element, k, properties[k])\n    }\n  }\n}\n\nfunction detect (cssProp) {\n  var camel = toCamelCase(cssProp)\n  var result = prefix(camel)\n  cache[camel] = cache[cssProp] = cache[result] = result\n  return result\n}\n\nfunction set () {\n  if (arguments.length === 2) {\n    if (typeof arguments[1] === 'string') {\n      arguments[0].style.cssText = arguments[1]\n    } else {\n      each(arguments[0], arguments[1])\n    }\n  } else {\n    style(arguments[0], arguments[1], arguments[2])\n  }\n}\n\nmodule.exports = set\nmodule.exports.set = set\n\nmodule.exports.get = function (element, properties) {\n  if (Array.isArray(properties)) {\n    return properties.reduce(function (obj, prop) {\n      obj[prop] = style(element, prop || '')\n      return obj\n    }, {})\n  } else {\n    return style(element, properties || '')\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","if performance? and performance.now\n  module.exports = -> performance.now()\nelse if process? and process.hrtime\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\n  hrtime = process.hrtime\n  getNanoSeconds = ->\n    hr = hrtime()\n    hr[0] * 1e9 + hr[1]\n  moduleLoadTime = getNanoSeconds()\n  upTime = process.uptime() * 1e9\n  nodeLoadTime = moduleLoadTime - upTime\nelse if Date.now\n  module.exports = -> Date.now() - loadTime\n  loadTime = Date.now()\nelse\n  module.exports = -> new Date().getTime() - loadTime\n  loadTime = new Date().getTime()\n","var div = null\nvar prefixes = [ 'Webkit', 'Moz', 'O', 'ms' ]\n\nmodule.exports = function prefixStyle (prop) {\n  // re-use a dummy div\n  if (!div) {\n    div = document.createElement('div')\n  }\n\n  var style = div.style\n\n  // prop exists without prefix\n  if (prop in style) {\n    return prop\n  }\n\n  // borderRadius -> BorderRadius\n  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)\n\n  // find the vendor-prefixed prop\n  for (var i = prefixes.length; i >= 0; i--) {\n    var name = prefixes[i] + titleCase\n    // e.g. WebkitBorderRadius or webkitBorderRadius\n    if (name in style) {\n      return name\n    }\n  }\n\n  return false\n}\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.renderViewDefault = renderViewDefault;\nexports.renderTrackHorizontalDefault = renderTrackHorizontalDefault;\nexports.renderTrackVerticalDefault = renderTrackVerticalDefault;\nexports.renderThumbHorizontalDefault = renderThumbHorizontalDefault;\nexports.renderThumbVerticalDefault = renderThumbVerticalDefault;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n/* eslint-disable react/prop-types */\n\nfunction renderViewDefault(props) {\n    return _react2[\"default\"].createElement('div', props);\n}\n\nfunction renderTrackHorizontalDefault(_ref) {\n    var style = _ref.style,\n        props = _objectWithoutProperties(_ref, ['style']);\n\n    var finalStyle = _extends({}, style, {\n        right: 2,\n        bottom: 2,\n        left: 2,\n        borderRadius: 3\n    });\n    return _react2[\"default\"].createElement('div', _extends({ style: finalStyle }, props));\n}\n\nfunction renderTrackVerticalDefault(_ref2) {\n    var style = _ref2.style,\n        props = _objectWithoutProperties(_ref2, ['style']);\n\n    var finalStyle = _extends({}, style, {\n        right: 2,\n        bottom: 2,\n        top: 2,\n        borderRadius: 3\n    });\n    return _react2[\"default\"].createElement('div', _extends({ style: finalStyle }, props));\n}\n\nfunction renderThumbHorizontalDefault(_ref3) {\n    var style = _ref3.style,\n        props = _objectWithoutProperties(_ref3, ['style']);\n\n    var finalStyle = _extends({}, style, {\n        cursor: 'pointer',\n        borderRadius: 'inherit',\n        backgroundColor: 'rgba(0,0,0,.2)'\n    });\n    return _react2[\"default\"].createElement('div', _extends({ style: finalStyle }, props));\n}\n\nfunction renderThumbVerticalDefault(_ref4) {\n    var style = _ref4.style,\n        props = _objectWithoutProperties(_ref4, ['style']);\n\n    var finalStyle = _extends({}, style, {\n        cursor: 'pointer',\n        borderRadius: 'inherit',\n        backgroundColor: 'rgba(0,0,0,.2)'\n    });\n    return _react2[\"default\"].createElement('div', _extends({ style: finalStyle }, props));\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _raf2 = require('raf');\n\nvar _raf3 = _interopRequireDefault(_raf2);\n\nvar _domCss = require('dom-css');\n\nvar _domCss2 = _interopRequireDefault(_domCss);\n\nvar _react = require('react');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _isString = require('../utils/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _getScrollbarWidth = require('../utils/getScrollbarWidth');\n\nvar _getScrollbarWidth2 = _interopRequireDefault(_getScrollbarWidth);\n\nvar _returnFalse = require('../utils/returnFalse');\n\nvar _returnFalse2 = _interopRequireDefault(_returnFalse);\n\nvar _getInnerWidth = require('../utils/getInnerWidth');\n\nvar _getInnerWidth2 = _interopRequireDefault(_getInnerWidth);\n\nvar _getInnerHeight = require('../utils/getInnerHeight');\n\nvar _getInnerHeight2 = _interopRequireDefault(_getInnerHeight);\n\nvar _styles = require('./styles');\n\nvar _defaultRenderElements = require('./defaultRenderElements');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Scrollbars = function (_Component) {\n    _inherits(Scrollbars, _Component);\n\n    function Scrollbars(props) {\n        var _ref;\n\n        _classCallCheck(this, Scrollbars);\n\n        for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            rest[_key - 1] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Scrollbars.__proto__ || Object.getPrototypeOf(Scrollbars)).call.apply(_ref, [this, props].concat(rest)));\n\n        _this.getScrollLeft = _this.getScrollLeft.bind(_this);\n        _this.getScrollTop = _this.getScrollTop.bind(_this);\n        _this.getScrollWidth = _this.getScrollWidth.bind(_this);\n        _this.getScrollHeight = _this.getScrollHeight.bind(_this);\n        _this.getClientWidth = _this.getClientWidth.bind(_this);\n        _this.getClientHeight = _this.getClientHeight.bind(_this);\n        _this.getValues = _this.getValues.bind(_this);\n        _this.getThumbHorizontalWidth = _this.getThumbHorizontalWidth.bind(_this);\n        _this.getThumbVerticalHeight = _this.getThumbVerticalHeight.bind(_this);\n        _this.getScrollLeftForOffset = _this.getScrollLeftForOffset.bind(_this);\n        _this.getScrollTopForOffset = _this.getScrollTopForOffset.bind(_this);\n\n        _this.scrollLeft = _this.scrollLeft.bind(_this);\n        _this.scrollTop = _this.scrollTop.bind(_this);\n        _this.scrollToLeft = _this.scrollToLeft.bind(_this);\n        _this.scrollToTop = _this.scrollToTop.bind(_this);\n        _this.scrollToRight = _this.scrollToRight.bind(_this);\n        _this.scrollToBottom = _this.scrollToBottom.bind(_this);\n\n        _this.handleTrackMouseEnter = _this.handleTrackMouseEnter.bind(_this);\n        _this.handleTrackMouseLeave = _this.handleTrackMouseLeave.bind(_this);\n        _this.handleHorizontalTrackMouseDown = _this.handleHorizontalTrackMouseDown.bind(_this);\n        _this.handleVerticalTrackMouseDown = _this.handleVerticalTrackMouseDown.bind(_this);\n        _this.handleHorizontalThumbMouseDown = _this.handleHorizontalThumbMouseDown.bind(_this);\n        _this.handleVerticalThumbMouseDown = _this.handleVerticalThumbMouseDown.bind(_this);\n        _this.handleWindowResize = _this.handleWindowResize.bind(_this);\n        _this.handleScroll = _this.handleScroll.bind(_this);\n        _this.handleDrag = _this.handleDrag.bind(_this);\n        _this.handleDragEnd = _this.handleDragEnd.bind(_this);\n\n        _this.state = {\n            didMountUniversal: false\n        };\n        return _this;\n    }\n\n    _createClass(Scrollbars, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.addListeners();\n            this.update();\n            this.componentDidMountUniversal();\n        }\n    }, {\n        key: 'componentDidMountUniversal',\n        value: function componentDidMountUniversal() {\n            // eslint-disable-line react/sort-comp\n            var universal = this.props.universal;\n\n            if (!universal) return;\n            this.setState({ didMountUniversal: true });\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.update();\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.removeListeners();\n            (0, _raf2.cancel)(this.requestFrame);\n            clearTimeout(this.hideTracksTimeout);\n            clearInterval(this.detectScrollingInterval);\n        }\n    }, {\n        key: 'getScrollLeft',\n        value: function getScrollLeft() {\n            if (!this.view) return 0;\n            return this.view.scrollLeft;\n        }\n    }, {\n        key: 'getScrollTop',\n        value: function getScrollTop() {\n            if (!this.view) return 0;\n            return this.view.scrollTop;\n        }\n    }, {\n        key: 'getScrollWidth',\n        value: function getScrollWidth() {\n            if (!this.view) return 0;\n            return this.view.scrollWidth;\n        }\n    }, {\n        key: 'getScrollHeight',\n        value: function getScrollHeight() {\n            if (!this.view) return 0;\n            return this.view.scrollHeight;\n        }\n    }, {\n        key: 'getClientWidth',\n        value: function getClientWidth() {\n            if (!this.view) return 0;\n            return this.view.clientWidth;\n        }\n    }, {\n        key: 'getClientHeight',\n        value: function getClientHeight() {\n            if (!this.view) return 0;\n            return this.view.clientHeight;\n        }\n    }, {\n        key: 'getValues',\n        value: function getValues() {\n            var _ref2 = this.view || {},\n                _ref2$scrollLeft = _ref2.scrollLeft,\n                scrollLeft = _ref2$scrollLeft === undefined ? 0 : _ref2$scrollLeft,\n                _ref2$scrollTop = _ref2.scrollTop,\n                scrollTop = _ref2$scrollTop === undefined ? 0 : _ref2$scrollTop,\n                _ref2$scrollWidth = _ref2.scrollWidth,\n                scrollWidth = _ref2$scrollWidth === undefined ? 0 : _ref2$scrollWidth,\n                _ref2$scrollHeight = _ref2.scrollHeight,\n                scrollHeight = _ref2$scrollHeight === undefined ? 0 : _ref2$scrollHeight,\n                _ref2$clientWidth = _ref2.clientWidth,\n                clientWidth = _ref2$clientWidth === undefined ? 0 : _ref2$clientWidth,\n                _ref2$clientHeight = _ref2.clientHeight,\n                clientHeight = _ref2$clientHeight === undefined ? 0 : _ref2$clientHeight;\n\n            return {\n                left: scrollLeft / (scrollWidth - clientWidth) || 0,\n                top: scrollTop / (scrollHeight - clientHeight) || 0,\n                scrollLeft: scrollLeft,\n                scrollTop: scrollTop,\n                scrollWidth: scrollWidth,\n                scrollHeight: scrollHeight,\n                clientWidth: clientWidth,\n                clientHeight: clientHeight\n            };\n        }\n    }, {\n        key: 'getThumbHorizontalWidth',\n        value: function getThumbHorizontalWidth() {\n            var _props = this.props,\n                thumbSize = _props.thumbSize,\n                thumbMinSize = _props.thumbMinSize;\n            var _view = this.view,\n                scrollWidth = _view.scrollWidth,\n                clientWidth = _view.clientWidth;\n\n            var trackWidth = (0, _getInnerWidth2[\"default\"])(this.trackHorizontal);\n            var width = Math.ceil(clientWidth / scrollWidth * trackWidth);\n            if (trackWidth <= width) return 0;\n            if (thumbSize) return thumbSize;\n            return Math.max(width, thumbMinSize);\n        }\n    }, {\n        key: 'getThumbVerticalHeight',\n        value: function getThumbVerticalHeight() {\n            var _props2 = this.props,\n                thumbSize = _props2.thumbSize,\n                thumbMinSize = _props2.thumbMinSize;\n            var _view2 = this.view,\n                scrollHeight = _view2.scrollHeight,\n                clientHeight = _view2.clientHeight;\n\n            var trackHeight = (0, _getInnerHeight2[\"default\"])(this.trackVertical);\n            var height = Math.ceil(clientHeight / scrollHeight * trackHeight);\n            if (trackHeight <= height) return 0;\n            if (thumbSize) return thumbSize;\n            return Math.max(height, thumbMinSize);\n        }\n    }, {\n        key: 'getScrollLeftForOffset',\n        value: function getScrollLeftForOffset(offset) {\n            var _view3 = this.view,\n                scrollWidth = _view3.scrollWidth,\n                clientWidth = _view3.clientWidth;\n\n            var trackWidth = (0, _getInnerWidth2[\"default\"])(this.trackHorizontal);\n            var thumbWidth = this.getThumbHorizontalWidth();\n            return offset / (trackWidth - thumbWidth) * (scrollWidth - clientWidth);\n        }\n    }, {\n        key: 'getScrollTopForOffset',\n        value: function getScrollTopForOffset(offset) {\n            var _view4 = this.view,\n                scrollHeight = _view4.scrollHeight,\n                clientHeight = _view4.clientHeight;\n\n            var trackHeight = (0, _getInnerHeight2[\"default\"])(this.trackVertical);\n            var thumbHeight = this.getThumbVerticalHeight();\n            return offset / (trackHeight - thumbHeight) * (scrollHeight - clientHeight);\n        }\n    }, {\n        key: 'scrollLeft',\n        value: function scrollLeft() {\n            var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n            if (!this.view) return;\n            this.view.scrollLeft = left;\n        }\n    }, {\n        key: 'scrollTop',\n        value: function scrollTop() {\n            var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n            if (!this.view) return;\n            this.view.scrollTop = top;\n        }\n    }, {\n        key: 'scrollToLeft',\n        value: function scrollToLeft() {\n            if (!this.view) return;\n            this.view.scrollLeft = 0;\n        }\n    }, {\n        key: 'scrollToTop',\n        value: function scrollToTop() {\n            if (!this.view) return;\n            this.view.scrollTop = 0;\n        }\n    }, {\n        key: 'scrollToRight',\n        value: function scrollToRight() {\n            if (!this.view) return;\n            this.view.scrollLeft = this.view.scrollWidth;\n        }\n    }, {\n        key: 'scrollToBottom',\n        value: function scrollToBottom() {\n            if (!this.view) return;\n            this.view.scrollTop = this.view.scrollHeight;\n        }\n    }, {\n        key: 'addListeners',\n        value: function addListeners() {\n            /* istanbul ignore if */\n            if (typeof document === 'undefined' || !this.view) return;\n            var view = this.view,\n                trackHorizontal = this.trackHorizontal,\n                trackVertical = this.trackVertical,\n                thumbHorizontal = this.thumbHorizontal,\n                thumbVertical = this.thumbVertical;\n\n            view.addEventListener('scroll', this.handleScroll);\n            if (!(0, _getScrollbarWidth2[\"default\"])()) return;\n            trackHorizontal.addEventListener('mouseenter', this.handleTrackMouseEnter);\n            trackHorizontal.addEventListener('mouseleave', this.handleTrackMouseLeave);\n            trackHorizontal.addEventListener('mousedown', this.handleHorizontalTrackMouseDown);\n            trackVertical.addEventListener('mouseenter', this.handleTrackMouseEnter);\n            trackVertical.addEventListener('mouseleave', this.handleTrackMouseLeave);\n            trackVertical.addEventListener('mousedown', this.handleVerticalTrackMouseDown);\n            thumbHorizontal.addEventListener('mousedown', this.handleHorizontalThumbMouseDown);\n            thumbVertical.addEventListener('mousedown', this.handleVerticalThumbMouseDown);\n            window.addEventListener('resize', this.handleWindowResize);\n        }\n    }, {\n        key: 'removeListeners',\n        value: function removeListeners() {\n            /* istanbul ignore if */\n            if (typeof document === 'undefined' || !this.view) return;\n            var view = this.view,\n                trackHorizontal = this.trackHorizontal,\n                trackVertical = this.trackVertical,\n                thumbHorizontal = this.thumbHorizontal,\n                thumbVertical = this.thumbVertical;\n\n            view.removeEventListener('scroll', this.handleScroll);\n            if (!(0, _getScrollbarWidth2[\"default\"])()) return;\n            trackHorizontal.removeEventListener('mouseenter', this.handleTrackMouseEnter);\n            trackHorizontal.removeEventListener('mouseleave', this.handleTrackMouseLeave);\n            trackHorizontal.removeEventListener('mousedown', this.handleHorizontalTrackMouseDown);\n            trackVertical.removeEventListener('mouseenter', this.handleTrackMouseEnter);\n            trackVertical.removeEventListener('mouseleave', this.handleTrackMouseLeave);\n            trackVertical.removeEventListener('mousedown', this.handleVerticalTrackMouseDown);\n            thumbHorizontal.removeEventListener('mousedown', this.handleHorizontalThumbMouseDown);\n            thumbVertical.removeEventListener('mousedown', this.handleVerticalThumbMouseDown);\n            window.removeEventListener('resize', this.handleWindowResize);\n            // Possibly setup by `handleDragStart`\n            this.teardownDragging();\n        }\n    }, {\n        key: 'handleScroll',\n        value: function handleScroll(event) {\n            var _this2 = this;\n\n            var _props3 = this.props,\n                onScroll = _props3.onScroll,\n                onScrollFrame = _props3.onScrollFrame;\n\n            if (onScroll) onScroll(event);\n            this.update(function (values) {\n                var scrollLeft = values.scrollLeft,\n                    scrollTop = values.scrollTop;\n\n                _this2.viewScrollLeft = scrollLeft;\n                _this2.viewScrollTop = scrollTop;\n                if (onScrollFrame) onScrollFrame(values);\n            });\n            this.detectScrolling();\n        }\n    }, {\n        key: 'handleScrollStart',\n        value: function handleScrollStart() {\n            var onScrollStart = this.props.onScrollStart;\n\n            if (onScrollStart) onScrollStart();\n            this.handleScrollStartAutoHide();\n        }\n    }, {\n        key: 'handleScrollStartAutoHide',\n        value: function handleScrollStartAutoHide() {\n            var autoHide = this.props.autoHide;\n\n            if (!autoHide) return;\n            this.showTracks();\n        }\n    }, {\n        key: 'handleScrollStop',\n        value: function handleScrollStop() {\n            var onScrollStop = this.props.onScrollStop;\n\n            if (onScrollStop) onScrollStop();\n            this.handleScrollStopAutoHide();\n        }\n    }, {\n        key: 'handleScrollStopAutoHide',\n        value: function handleScrollStopAutoHide() {\n            var autoHide = this.props.autoHide;\n\n            if (!autoHide) return;\n            this.hideTracks();\n        }\n    }, {\n        key: 'handleWindowResize',\n        value: function handleWindowResize() {\n            (0, _getScrollbarWidth2[\"default\"])(false);\n            this.forceUpdate();\n        }\n    }, {\n        key: 'handleHorizontalTrackMouseDown',\n        value: function handleHorizontalTrackMouseDown(event) {\n            event.preventDefault();\n            var target = event.target,\n                clientX = event.clientX;\n\n            var _target$getBoundingCl = target.getBoundingClientRect(),\n                targetLeft = _target$getBoundingCl.left;\n\n            var thumbWidth = this.getThumbHorizontalWidth();\n            var offset = Math.abs(targetLeft - clientX) - thumbWidth / 2;\n            this.view.scrollLeft = this.getScrollLeftForOffset(offset);\n        }\n    }, {\n        key: 'handleVerticalTrackMouseDown',\n        value: function handleVerticalTrackMouseDown(event) {\n            event.preventDefault();\n            var target = event.target,\n                clientY = event.clientY;\n\n            var _target$getBoundingCl2 = target.getBoundingClientRect(),\n                targetTop = _target$getBoundingCl2.top;\n\n            var thumbHeight = this.getThumbVerticalHeight();\n            var offset = Math.abs(targetTop - clientY) - thumbHeight / 2;\n            this.view.scrollTop = this.getScrollTopForOffset(offset);\n        }\n    }, {\n        key: 'handleHorizontalThumbMouseDown',\n        value: function handleHorizontalThumbMouseDown(event) {\n            event.preventDefault();\n            this.handleDragStart(event);\n            var target = event.target,\n                clientX = event.clientX;\n            var offsetWidth = target.offsetWidth;\n\n            var _target$getBoundingCl3 = target.getBoundingClientRect(),\n                left = _target$getBoundingCl3.left;\n\n            this.prevPageX = offsetWidth - (clientX - left);\n        }\n    }, {\n        key: 'handleVerticalThumbMouseDown',\n        value: function handleVerticalThumbMouseDown(event) {\n            event.preventDefault();\n            this.handleDragStart(event);\n            var target = event.target,\n                clientY = event.clientY;\n            var offsetHeight = target.offsetHeight;\n\n            var _target$getBoundingCl4 = target.getBoundingClientRect(),\n                top = _target$getBoundingCl4.top;\n\n            this.prevPageY = offsetHeight - (clientY - top);\n        }\n    }, {\n        key: 'setupDragging',\n        value: function setupDragging() {\n            (0, _domCss2[\"default\"])(document.body, _styles.disableSelectStyle);\n            document.addEventListener('mousemove', this.handleDrag);\n            document.addEventListener('mouseup', this.handleDragEnd);\n            document.onselectstart = _returnFalse2[\"default\"];\n        }\n    }, {\n        key: 'teardownDragging',\n        value: function teardownDragging() {\n            (0, _domCss2[\"default\"])(document.body, _styles.disableSelectStyleReset);\n            document.removeEventListener('mousemove', this.handleDrag);\n            document.removeEventListener('mouseup', this.handleDragEnd);\n            document.onselectstart = undefined;\n        }\n    }, {\n        key: 'handleDragStart',\n        value: function handleDragStart(event) {\n            this.dragging = true;\n            event.stopImmediatePropagation();\n            this.setupDragging();\n        }\n    }, {\n        key: 'handleDrag',\n        value: function handleDrag(event) {\n            if (this.prevPageX) {\n                var clientX = event.clientX;\n\n                var _trackHorizontal$getB = this.trackHorizontal.getBoundingClientRect(),\n                    trackLeft = _trackHorizontal$getB.left;\n\n                var thumbWidth = this.getThumbHorizontalWidth();\n                var clickPosition = thumbWidth - this.prevPageX;\n                var offset = -trackLeft + clientX - clickPosition;\n                this.view.scrollLeft = this.getScrollLeftForOffset(offset);\n            }\n            if (this.prevPageY) {\n                var clientY = event.clientY;\n\n                var _trackVertical$getBou = this.trackVertical.getBoundingClientRect(),\n                    trackTop = _trackVertical$getBou.top;\n\n                var thumbHeight = this.getThumbVerticalHeight();\n                var _clickPosition = thumbHeight - this.prevPageY;\n                var _offset = -trackTop + clientY - _clickPosition;\n                this.view.scrollTop = this.getScrollTopForOffset(_offset);\n            }\n            return false;\n        }\n    }, {\n        key: 'handleDragEnd',\n        value: function handleDragEnd() {\n            this.dragging = false;\n            this.prevPageX = this.prevPageY = 0;\n            this.teardownDragging();\n            this.handleDragEndAutoHide();\n        }\n    }, {\n        key: 'handleDragEndAutoHide',\n        value: function handleDragEndAutoHide() {\n            var autoHide = this.props.autoHide;\n\n            if (!autoHide) return;\n            this.hideTracks();\n        }\n    }, {\n        key: 'handleTrackMouseEnter',\n        value: function handleTrackMouseEnter() {\n            this.trackMouseOver = true;\n            this.handleTrackMouseEnterAutoHide();\n        }\n    }, {\n        key: 'handleTrackMouseEnterAutoHide',\n        value: function handleTrackMouseEnterAutoHide() {\n            var autoHide = this.props.autoHide;\n\n            if (!autoHide) return;\n            this.showTracks();\n        }\n    }, {\n        key: 'handleTrackMouseLeave',\n        value: function handleTrackMouseLeave() {\n            this.trackMouseOver = false;\n            this.handleTrackMouseLeaveAutoHide();\n        }\n    }, {\n        key: 'handleTrackMouseLeaveAutoHide',\n        value: function handleTrackMouseLeaveAutoHide() {\n            var autoHide = this.props.autoHide;\n\n            if (!autoHide) return;\n            this.hideTracks();\n        }\n    }, {\n        key: 'showTracks',\n        value: function showTracks() {\n            clearTimeout(this.hideTracksTimeout);\n            (0, _domCss2[\"default\"])(this.trackHorizontal, { opacity: 1 });\n            (0, _domCss2[\"default\"])(this.trackVertical, { opacity: 1 });\n        }\n    }, {\n        key: 'hideTracks',\n        value: function hideTracks() {\n            var _this3 = this;\n\n            if (this.dragging) return;\n            if (this.scrolling) return;\n            if (this.trackMouseOver) return;\n            var autoHideTimeout = this.props.autoHideTimeout;\n\n            clearTimeout(this.hideTracksTimeout);\n            this.hideTracksTimeout = setTimeout(function () {\n                (0, _domCss2[\"default\"])(_this3.trackHorizontal, { opacity: 0 });\n                (0, _domCss2[\"default\"])(_this3.trackVertical, { opacity: 0 });\n            }, autoHideTimeout);\n        }\n    }, {\n        key: 'detectScrolling',\n        value: function detectScrolling() {\n            var _this4 = this;\n\n            if (this.scrolling) return;\n            this.scrolling = true;\n            this.handleScrollStart();\n            this.detectScrollingInterval = setInterval(function () {\n                if (_this4.lastViewScrollLeft === _this4.viewScrollLeft && _this4.lastViewScrollTop === _this4.viewScrollTop) {\n                    clearInterval(_this4.detectScrollingInterval);\n                    _this4.scrolling = false;\n                    _this4.handleScrollStop();\n                }\n                _this4.lastViewScrollLeft = _this4.viewScrollLeft;\n                _this4.lastViewScrollTop = _this4.viewScrollTop;\n            }, 100);\n        }\n    }, {\n        key: 'raf',\n        value: function raf(callback) {\n            var _this5 = this;\n\n            if (this.requestFrame) _raf3[\"default\"].cancel(this.requestFrame);\n            this.requestFrame = (0, _raf3[\"default\"])(function () {\n                _this5.requestFrame = undefined;\n                callback();\n            });\n        }\n    }, {\n        key: 'update',\n        value: function update(callback) {\n            var _this6 = this;\n\n            this.raf(function () {\n                return _this6._update(callback);\n            });\n        }\n    }, {\n        key: '_update',\n        value: function _update(callback) {\n            var _props4 = this.props,\n                onUpdate = _props4.onUpdate,\n                hideTracksWhenNotNeeded = _props4.hideTracksWhenNotNeeded;\n\n            var values = this.getValues();\n            if ((0, _getScrollbarWidth2[\"default\"])()) {\n                var scrollLeft = values.scrollLeft,\n                    clientWidth = values.clientWidth,\n                    scrollWidth = values.scrollWidth;\n\n                var trackHorizontalWidth = (0, _getInnerWidth2[\"default\"])(this.trackHorizontal);\n                var thumbHorizontalWidth = this.getThumbHorizontalWidth();\n                var thumbHorizontalX = scrollLeft / (scrollWidth - clientWidth) * (trackHorizontalWidth - thumbHorizontalWidth);\n                var thumbHorizontalStyle = {\n                    width: thumbHorizontalWidth,\n                    transform: 'translateX(' + thumbHorizontalX + 'px)'\n                };\n                var scrollTop = values.scrollTop,\n                    clientHeight = values.clientHeight,\n                    scrollHeight = values.scrollHeight;\n\n                var trackVerticalHeight = (0, _getInnerHeight2[\"default\"])(this.trackVertical);\n                var thumbVerticalHeight = this.getThumbVerticalHeight();\n                var thumbVerticalY = scrollTop / (scrollHeight - clientHeight) * (trackVerticalHeight - thumbVerticalHeight);\n                var thumbVerticalStyle = {\n                    height: thumbVerticalHeight,\n                    transform: 'translateY(' + thumbVerticalY + 'px)'\n                };\n                if (hideTracksWhenNotNeeded) {\n                    var trackHorizontalStyle = {\n                        visibility: scrollWidth > clientWidth ? 'visible' : 'hidden'\n                    };\n                    var trackVerticalStyle = {\n                        visibility: scrollHeight > clientHeight ? 'visible' : 'hidden'\n                    };\n                    (0, _domCss2[\"default\"])(this.trackHorizontal, trackHorizontalStyle);\n                    (0, _domCss2[\"default\"])(this.trackVertical, trackVerticalStyle);\n                }\n                (0, _domCss2[\"default\"])(this.thumbHorizontal, thumbHorizontalStyle);\n                (0, _domCss2[\"default\"])(this.thumbVertical, thumbVerticalStyle);\n            }\n            if (onUpdate) onUpdate(values);\n            if (typeof callback !== 'function') return;\n            callback(values);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this7 = this;\n\n            var scrollbarWidth = (0, _getScrollbarWidth2[\"default\"])();\n            /* eslint-disable no-unused-vars */\n\n            var _props5 = this.props,\n                onScroll = _props5.onScroll,\n                onScrollFrame = _props5.onScrollFrame,\n                onScrollStart = _props5.onScrollStart,\n                onScrollStop = _props5.onScrollStop,\n                onUpdate = _props5.onUpdate,\n                renderView = _props5.renderView,\n                renderTrackHorizontal = _props5.renderTrackHorizontal,\n                renderTrackVertical = _props5.renderTrackVertical,\n                renderThumbHorizontal = _props5.renderThumbHorizontal,\n                renderThumbVertical = _props5.renderThumbVertical,\n                tagName = _props5.tagName,\n                hideTracksWhenNotNeeded = _props5.hideTracksWhenNotNeeded,\n                autoHide = _props5.autoHide,\n                autoHideTimeout = _props5.autoHideTimeout,\n                autoHideDuration = _props5.autoHideDuration,\n                thumbSize = _props5.thumbSize,\n                thumbMinSize = _props5.thumbMinSize,\n                universal = _props5.universal,\n                autoHeight = _props5.autoHeight,\n                autoHeightMin = _props5.autoHeightMin,\n                autoHeightMax = _props5.autoHeightMax,\n                style = _props5.style,\n                children = _props5.children,\n                props = _objectWithoutProperties(_props5, ['onScroll', 'onScrollFrame', 'onScrollStart', 'onScrollStop', 'onUpdate', 'renderView', 'renderTrackHorizontal', 'renderTrackVertical', 'renderThumbHorizontal', 'renderThumbVertical', 'tagName', 'hideTracksWhenNotNeeded', 'autoHide', 'autoHideTimeout', 'autoHideDuration', 'thumbSize', 'thumbMinSize', 'universal', 'autoHeight', 'autoHeightMin', 'autoHeightMax', 'style', 'children']);\n            /* eslint-enable no-unused-vars */\n\n            var didMountUniversal = this.state.didMountUniversal;\n\n\n            var containerStyle = _extends({}, _styles.containerStyleDefault, autoHeight && _extends({}, _styles.containerStyleAutoHeight, {\n                minHeight: autoHeightMin,\n                maxHeight: autoHeightMax\n            }), style);\n\n            var viewStyle = _extends({}, _styles.viewStyleDefault, {\n                // Hide scrollbars by setting a negative margin\n                marginRight: scrollbarWidth ? -scrollbarWidth : 0,\n                marginBottom: scrollbarWidth ? -scrollbarWidth : 0\n            }, autoHeight && _extends({}, _styles.viewStyleAutoHeight, {\n                // Add scrollbarWidth to autoHeight in order to compensate negative margins\n                minHeight: (0, _isString2[\"default\"])(autoHeightMin) ? 'calc(' + autoHeightMin + ' + ' + scrollbarWidth + 'px)' : autoHeightMin + scrollbarWidth,\n                maxHeight: (0, _isString2[\"default\"])(autoHeightMax) ? 'calc(' + autoHeightMax + ' + ' + scrollbarWidth + 'px)' : autoHeightMax + scrollbarWidth\n            }), autoHeight && universal && !didMountUniversal && {\n                minHeight: autoHeightMin,\n                maxHeight: autoHeightMax\n            }, universal && !didMountUniversal && _styles.viewStyleUniversalInitial);\n\n            var trackAutoHeightStyle = {\n                transition: 'opacity ' + autoHideDuration + 'ms',\n                opacity: 0\n            };\n\n            var trackHorizontalStyle = _extends({}, _styles.trackHorizontalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {\n                display: 'none'\n            });\n\n            var trackVerticalStyle = _extends({}, _styles.trackVerticalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {\n                display: 'none'\n            });\n\n            return (0, _react.createElement)(tagName, _extends({}, props, { style: containerStyle, ref: function ref(_ref3) {\n                    _this7.container = _ref3;\n                } }), [(0, _react.cloneElement)(renderView({ style: viewStyle }), { key: 'view', ref: function ref(_ref4) {\n                    _this7.view = _ref4;\n                } }, children), (0, _react.cloneElement)(renderTrackHorizontal({ style: trackHorizontalStyle }), { key: 'trackHorizontal', ref: function ref(_ref5) {\n                    _this7.trackHorizontal = _ref5;\n                } }, (0, _react.cloneElement)(renderThumbHorizontal({ style: _styles.thumbHorizontalStyleDefault }), { ref: function ref(_ref6) {\n                    _this7.thumbHorizontal = _ref6;\n                } })), (0, _react.cloneElement)(renderTrackVertical({ style: trackVerticalStyle }), { key: 'trackVertical', ref: function ref(_ref7) {\n                    _this7.trackVertical = _ref7;\n                } }, (0, _react.cloneElement)(renderThumbVertical({ style: _styles.thumbVerticalStyleDefault }), { ref: function ref(_ref8) {\n                    _this7.thumbVertical = _ref8;\n                } }))]);\n        }\n    }]);\n\n    return Scrollbars;\n}(_react.Component);\n\nexports[\"default\"] = Scrollbars;\n\n\nScrollbars.propTypes = {\n    onScroll: _propTypes2[\"default\"].func,\n    onScrollFrame: _propTypes2[\"default\"].func,\n    onScrollStart: _propTypes2[\"default\"].func,\n    onScrollStop: _propTypes2[\"default\"].func,\n    onUpdate: _propTypes2[\"default\"].func,\n    renderView: _propTypes2[\"default\"].func,\n    renderTrackHorizontal: _propTypes2[\"default\"].func,\n    renderTrackVertical: _propTypes2[\"default\"].func,\n    renderThumbHorizontal: _propTypes2[\"default\"].func,\n    renderThumbVertical: _propTypes2[\"default\"].func,\n    tagName: _propTypes2[\"default\"].string,\n    thumbSize: _propTypes2[\"default\"].number,\n    thumbMinSize: _propTypes2[\"default\"].number,\n    hideTracksWhenNotNeeded: _propTypes2[\"default\"].bool,\n    autoHide: _propTypes2[\"default\"].bool,\n    autoHideTimeout: _propTypes2[\"default\"].number,\n    autoHideDuration: _propTypes2[\"default\"].number,\n    autoHeight: _propTypes2[\"default\"].bool,\n    autoHeightMin: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].number, _propTypes2[\"default\"].string]),\n    autoHeightMax: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].number, _propTypes2[\"default\"].string]),\n    universal: _propTypes2[\"default\"].bool,\n    style: _propTypes2[\"default\"].object,\n    children: _propTypes2[\"default\"].node\n};\n\nScrollbars.defaultProps = {\n    renderView: _defaultRenderElements.renderViewDefault,\n    renderTrackHorizontal: _defaultRenderElements.renderTrackHorizontalDefault,\n    renderTrackVertical: _defaultRenderElements.renderTrackVerticalDefault,\n    renderThumbHorizontal: _defaultRenderElements.renderThumbHorizontalDefault,\n    renderThumbVertical: _defaultRenderElements.renderThumbVerticalDefault,\n    tagName: 'div',\n    thumbMinSize: 30,\n    hideTracksWhenNotNeeded: false,\n    autoHide: false,\n    autoHideTimeout: 1000,\n    autoHideDuration: 200,\n    autoHeight: false,\n    autoHeightMin: 0,\n    autoHeightMax: 200,\n    universal: false\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar containerStyleDefault = exports.containerStyleDefault = {\n    position: 'relative',\n    overflow: 'hidden',\n    width: '100%',\n    height: '100%'\n};\n\n// Overrides containerStyleDefault properties\nvar containerStyleAutoHeight = exports.containerStyleAutoHeight = {\n    height: 'auto'\n};\n\nvar viewStyleDefault = exports.viewStyleDefault = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'scroll',\n    WebkitOverflowScrolling: 'touch'\n};\n\n// Overrides viewStyleDefault properties\nvar viewStyleAutoHeight = exports.viewStyleAutoHeight = {\n    position: 'relative',\n    top: undefined,\n    left: undefined,\n    right: undefined,\n    bottom: undefined\n};\n\nvar viewStyleUniversalInitial = exports.viewStyleUniversalInitial = {\n    overflow: 'hidden',\n    marginRight: 0,\n    marginBottom: 0\n};\n\nvar trackHorizontalStyleDefault = exports.trackHorizontalStyleDefault = {\n    position: 'absolute',\n    height: 6\n};\n\nvar trackVerticalStyleDefault = exports.trackVerticalStyleDefault = {\n    position: 'absolute',\n    width: 6\n};\n\nvar thumbHorizontalStyleDefault = exports.thumbHorizontalStyleDefault = {\n    position: 'relative',\n    display: 'block',\n    height: '100%'\n};\n\nvar thumbVerticalStyleDefault = exports.thumbVerticalStyleDefault = {\n    position: 'relative',\n    display: 'block',\n    width: '100%'\n};\n\nvar disableSelectStyle = exports.disableSelectStyle = {\n    userSelect: 'none'\n};\n\nvar disableSelectStyleReset = exports.disableSelectStyleReset = {\n    userSelect: ''\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Scrollbars = undefined;\n\nvar _Scrollbars = require('./Scrollbars');\n\nvar _Scrollbars2 = _interopRequireDefault(_Scrollbars);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nexports[\"default\"] = _Scrollbars2[\"default\"];\nexports.Scrollbars = _Scrollbars2[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports[\"default\"] = getInnerHeight;\nfunction getInnerHeight(el) {\n    var clientHeight = el.clientHeight;\n\n    var _getComputedStyle = getComputedStyle(el),\n        paddingTop = _getComputedStyle.paddingTop,\n        paddingBottom = _getComputedStyle.paddingBottom;\n\n    return clientHeight - parseFloat(paddingTop) - parseFloat(paddingBottom);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports[\"default\"] = getInnerWidth;\nfunction getInnerWidth(el) {\n    var clientWidth = el.clientWidth;\n\n    var _getComputedStyle = getComputedStyle(el),\n        paddingLeft = _getComputedStyle.paddingLeft,\n        paddingRight = _getComputedStyle.paddingRight;\n\n    return clientWidth - parseFloat(paddingLeft) - parseFloat(paddingRight);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports[\"default\"] = getScrollbarWidth;\n\nvar _domCss = require('dom-css');\n\nvar _domCss2 = _interopRequireDefault(_domCss);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar scrollbarWidth = false;\n\nfunction getScrollbarWidth() {\n    var cacheEnabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (cacheEnabled && scrollbarWidth !== false) return scrollbarWidth;\n    /* istanbul ignore else */\n    if (typeof document !== 'undefined') {\n        var div = document.createElement('div');\n        (0, _domCss2[\"default\"])(div, {\n            width: 100,\n            height: 100,\n            position: 'absolute',\n            top: -9999,\n            overflow: 'scroll',\n            MsOverflowStyle: 'scrollbar'\n        });\n        document.body.appendChild(div);\n        scrollbarWidth = div.offsetWidth - div.clientWidth;\n        document.body.removeChild(div);\n    } else {\n        scrollbarWidth = 0;\n    }\n    return scrollbarWidth || 0;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports[\"default\"] = isString;\nfunction isString(maybe) {\n    return typeof maybe === 'string';\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports[\"default\"] = returnFalse;\nfunction returnFalse() {\n    return false;\n}","import type { Declaration } from 'inline-style-parser';\nimport parse from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toCamelCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n","\n/**\n * Export.\n */\n\nmodule.exports = toNoCase\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/\nvar hasSeparator = /(_|-|\\.|:)/\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase()\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()\n  return string.toLowerCase()\n}\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : ''\n  })\n}\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ')\n  })\n}\n","\nvar clean = require('to-no-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSpaceCase\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : ''\n  }).trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push[...newElements]` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    const list = this.left.slice(start);\n    list.push(...this.right.slice(this.right.length - stop + this.left.length).reverse());\n    return list;\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[text][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","opacity","React","getAccordionSummaryUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AccordionSummaryRoot","styled","ButtonBase","name","overridesResolver","props","styles","root","_ref","theme","ownerState","transition","duration","transitions","shortest","_extends","display","minHeight","padding","spacing","create","accordionSummaryClasses","focusVisible","backgroundColor","vars","palette","action","focus","disabled","disabledOpacity","cursor","disableGutters","expanded","AccordionSummaryContent","content","_ref2","flexGrow","margin","AccordionSummaryExpandIconWrapper","expandIconWrapper","_ref3","color","active","transform","inProps","ref","useThemeProps","children","className","expandIcon","focusVisibleClassName","onClick","other","_objectWithoutPropertiesLoose","toggle","AccordionContext","classes","slots","composeClasses","useUtilityClasses","_jsxs","focusRipple","disableRipple","component","clsx","event","_jsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined","ListItemIconRoot","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","context","ListContext","getListItemIconUtilityClass","IS_UNITLESS","animationIterationCount","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexPositive","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","stopOpacity","strokeDashoffset","strokeOpacity","strokeWidth","module","value","prefix","toCamelCase","cache","addPxToStyle","style","element","property","camel","cssProp","result","detect","set","arguments","length","cssText","properties","k","hasOwnProperty","each","get","Array","isArray","reduce","obj","prop","hasOwn","Object","prototype","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","arr","call","isPlainObject","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","i","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","val","ret","decl","decls","declarations","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","now","process","hr","uptime","Date","getTime","div","prefixes","document","createElement","titleCase","toUpperCase","window","global","vendors","suffix","raf","caf","last","id","queue","frameDuration","callback","_now","next","Math","max","setTimeout","cp","cancelled","e","round","handle","fn","cancel","apply","polyfill","object","requestAnimationFrame","cancelAnimationFrame","assign","renderViewDefault","_react2","renderTrackHorizontalDefault","_objectWithoutProperties","finalStyle","right","bottom","left","borderRadius","renderTrackVerticalDefault","top","renderThumbHorizontalDefault","renderThumbVerticalDefault","_ref4","_react","__esModule","keys","indexOf","_createClass","defineProperties","descriptor","Constructor","protoProps","staticProps","_raf2","_raf3","_domCss2","_propTypes2","_isString2","_getScrollbarWidth2","_returnFalse2","_getInnerWidth2","_getInnerHeight2","_styles","_defaultRenderElements","Scrollbars","_Component","instance","_classCallCheck","_len","rest","_key","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","getScrollLeft","bind","getScrollTop","getScrollWidth","getScrollHeight","getClientWidth","getClientHeight","getValues","getThumbHorizontalWidth","getThumbVerticalHeight","getScrollLeftForOffset","getScrollTopForOffset","scrollLeft","scrollTop","scrollToLeft","scrollToTop","scrollToRight","scrollToBottom","handleTrackMouseEnter","handleTrackMouseLeave","handleHorizontalTrackMouseDown","handleVerticalTrackMouseDown","handleHorizontalThumbMouseDown","handleVerticalThumbMouseDown","handleWindowResize","handleScroll","handleDrag","handleDragEnd","state","didMountUniversal","subClass","superClass","setPrototypeOf","_inherits","addListeners","update","componentDidMountUniversal","universal","setState","removeListeners","requestFrame","clearTimeout","hideTracksTimeout","clearInterval","detectScrollingInterval","view","scrollWidth","scrollHeight","clientWidth","clientHeight","_ref2$scrollLeft","_ref2$scrollTop","_ref2$scrollWidth","_ref2$scrollHeight","_ref2$clientWidth","_ref2$clientHeight","_props","thumbSize","thumbMinSize","_view","trackWidth","trackHorizontal","width","ceil","_props2","_view2","trackHeight","trackVertical","height","offset","_view3","_view4","thumbHorizontal","thumbVertical","addEventListener","removeEventListener","teardownDragging","_this2","_props3","onScroll","onScrollFrame","values","viewScrollLeft","viewScrollTop","detectScrolling","onScrollStart","handleScrollStartAutoHide","autoHide","showTracks","onScrollStop","handleScrollStopAutoHide","hideTracks","forceUpdate","preventDefault","clientX","targetLeft","getBoundingClientRect","thumbWidth","abs","clientY","targetTop","thumbHeight","handleDragStart","offsetWidth","prevPageX","offsetHeight","prevPageY","body","disableSelectStyle","onselectstart","disableSelectStyleReset","dragging","stopImmediatePropagation","setupDragging","_offset","handleDragEndAutoHide","trackMouseOver","handleTrackMouseEnterAutoHide","handleTrackMouseLeaveAutoHide","_this3","scrolling","autoHideTimeout","_this4","handleScrollStart","setInterval","lastViewScrollLeft","lastViewScrollTop","handleScrollStop","_this5","_this6","_update","_props4","onUpdate","hideTracksWhenNotNeeded","trackHorizontalWidth","thumbHorizontalWidth","thumbHorizontalStyle","trackVerticalHeight","thumbVerticalHeight","thumbVerticalStyle","trackHorizontalStyle","visibility","trackVerticalStyle","_this7","scrollbarWidth","_props5","renderView","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","tagName","autoHideDuration","autoHeight","autoHeightMin","autoHeightMax","containerStyle","containerStyleDefault","containerStyleAutoHeight","maxHeight","viewStyle","viewStyleDefault","marginRight","marginBottom","viewStyleAutoHeight","viewStyleUniversalInitial","trackAutoHeightStyle","trackHorizontalStyleDefault","trackVerticalStyleDefault","container","cloneElement","_ref5","thumbHorizontalStyleDefault","_ref6","_ref7","thumbVerticalStyleDefault","_ref8","Component","propTypes","func","string","number","bool","oneOfType","defaultProps","WebkitOverflowScrolling","userSelect","_Scrollbars","_Scrollbars2","el","_getComputedStyle","getComputedStyle","paddingTop","paddingBottom","parseFloat","paddingLeft","paddingRight","MsOverflowStyle","appendChild","removeChild","_domCss","maybe","iterator","styleObject","inline_style_parser_1","hasIterator","forEach","__importDefault","space","matches","letter","hasSpace","test","toLowerCase","hasSeparator","separatorSplitter","unseparate","hasCamel","camelSplitter","previous","uppers","split","join","uncamelize","clean","nameRe","nameReJsx","emptyOptions","empty","Schema","normal","merge","definitions","index","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","types","DefinedInfo","mask","super","mark","check","own","definition","info","attributes","includes","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cx","cy","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","editable","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","operator","orient","orientation","origin","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","kebab","$0","camelcase","hastToReact","StyleToObject","pointEnd","point","pointStart","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","message","ruleId","parent","fatal","file","stack","actual","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","expression","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","countsByName","count","Type","dashes","find","Number","isNaN","settings","padRight","padLeft","commas","styleToObject","replacer","toCamel","parseStyle","String","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","isIdentifierName","computed","Boolean","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","all","splice","remove","items","parameters","chunkStart","unshift","SpliceBuffer","initial","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","reverse","deleteCount","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","current","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","entry","nok","disable","null","blankLine","partial","after","resolve","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_bufferIndex","_index","thematicBreak","marker","sequence","onBlank","notBlank","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","inside","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","called","labelEnd","newEvents","close","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","resolveText","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","head","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","parse","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","deserializer","$","out","unpair","flags","RegExp","BigInt","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","serializer","strict","pair","valueOf","toJSON","entries","toISOString","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","contents","listItemLoose","trimLines","trimLine","handlers","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","Symbol","toStringTag","trough","fns","pipeline","middlewareIndex","_len2","output","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","done","then","_len4","_key4","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign"],"sourceRoot":""}